function init(self)
	self.view_distance = 12
	self.scale = 4
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_fixed_projection", { zoom = self.scale })
	self.sized = false
	self.player_pos = go.get_position("player")
end

function zround(n)
	return n % 1 >= 0.5 and math.ceil(n) or math.floor(n)
end

function update(self)
	self.player_pos = go.get_position("player")
	if self.sized then
		go.set_position(-self.player_pos + vmath.vector3(self.vw/2, self.vh/2, 0), "world")
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") then
	end
	if action_id == hash("fwd") or action_id == hash("right") or action_id == hash("back") or action_id == hash("left") then
		self.mvable = true
		if action_id == hash("fwd") then
			msg.post("player", "inputs", { id = "fwd" })
		elseif action_id == hash("right") then
			msg.post("player", "inputs", { id = "right" })
		elseif action_id == hash("left") then
			msg.post("player", "inputs", { id = "left" })
		elseif action_id == hash("back") then
			msg.post("player", "inputs", { id = "back" })
		end
	end
end

function on_message(self, message_id, message)
	if message_id == hash("viewsize") then
		self.vh = message.vh
		self.vw = message.vw
		self.sized = true
	elseif message_id == hash("screensize") then
		self.scale = zround(math.max(message.sh, message.sw) / (16 * self.view_distance))
		msg.post("@render:", "use_fixed_projection", { zoom = self.scale })
	end
end