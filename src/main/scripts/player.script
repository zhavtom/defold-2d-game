function init(self)
	msg.post(".", "acquire_input_focus")
	self.pos = vmath.vector3()
	self.speed = 1
	self.align = 0
	self.input = vmath.vector3()
	self.coll = vmath.vector3()
	self.xmv = vmath.vector3(self.speed, 0, 0)
	self.ymv = vmath.vector3(0, self.speed, 0)
	self.wk = 0
	self.cinit = false
end

local function move(self)
	if self.coll.x >= 0 then
		if self.input.x > 0 then
			go.set_position(self.pos + self.xmv)
			self.input.x = 0
			self.coll.x = 0
			self.coll.y = 0
		end
	end
	if self.coll.x <= 0 then
		if self.input.x < 0 then
			go.set_position(self.pos - self.xmv)
			self.input.x = 0
		end
		self.coll.x = 0
	end
	if self.input.y > 0 then
		if self.coll.y >= 0 then
			go.set_position(self.pos + self.ymv)
			self.coll.y = 0
		end
		self.input.y = 0
	end
	if self.input.y < 0 then
		if self.coll.y <= 0 then
			go.set_position(self.pos - self.ymv)
			self.coll.y = 0
		end
		self.input.y = 0
	end
end
	
function update(self)
	self.pos = go.get_position()
	move(self)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		if message.group == hash("blocker") then
			self.coll = message.normal
		end
	end
	if message_id == hash("inputs") then
		if message.id == "fwd" then
			self.input.y = 1
		end
		if message.id == "right" then
			self.input.x = 1
		end
		if message.id == "back" then
			self.input.y = -1
		end
		if message.id == "left" then
			self.input.x = -1
		end
	end
end